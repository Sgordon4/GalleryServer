-- Table: public.account

-- DROP TABLE IF EXISTS public.account;

CREATE TABLE IF NOT EXISTS public.account
(
    accountuid uuid NOT NULL,
    email character varying COLLATE pg_catalog."default" NOT NULL,
    username character varying COLLATE pg_catalog."default" NOT NULL,
    password character varying COLLATE pg_catalog."default" NOT NULL,
    displayname character varying COLLATE pg_catalog."default" NOT NULL,
    creationdate timestamp without time zone NOT NULL,
	lastaccessdate timestamp without time zone,
    lastupdatedate timestamp without time zone,
    CONSTRAINT "Account_pkey" PRIMARY KEY (accountuid)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.account
    OWNER to postgres;


//-------------------------------------------------------------------------------------------



-- Table: public.file

-- DROP TABLE IF EXISTS public.file;

CREATE TABLE IF NOT EXISTS public.file
(
    fileuid uuid NOT NULL,
    filename character varying COLLATE pg_catalog."default" NOT NULL,
    parentuid uuid,
    accountuid uuid NOT NULL,
	isdirectory boolean,
	issymboliclink boolean,
	userdefinedattr json,
    tags json,
	creationdate timestamp without time zone NOT NULL,
	deleted boolean default false,
    CONSTRAINT "File_pkey" PRIMARY KEY (fileuid),
    CONSTRAINT "accountID" FOREIGN KEY (accountuid)
        REFERENCES public.account (accountuid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.file
    OWNER to postgres;


ALTER TABLE public.file ADD CONSTRAINT file_accountuid_filename_parentuid_key 
	UNIQUE NULLS NOT DISTINCT (filename, parentuid, accountuid);



//-------------------------------------------------------------------------------------------


Server table should not include dirty bits

-- Table: public.status

-- DROP TABLE IF EXISTS public.status;

CREATE TABLE IF NOT EXISTS public.status
(
    fileuid uuid NOT NULL,
	filechecksum text,
	filedirty boolean default false,
	dbchecksum text,
	dbdirty boolean default false,
    lastfileaccessdate timestamp without time zone,
    lastfileupdatedate timestamp without time zone,
	lastdbaccessdate timestamp without time zone,
    lastdbupdatedate timestamp without time zone,
    CONSTRAINT "File_pkey" PRIMARY KEY (fileuid),
    CONSTRAINT fileuid FOREIGN KEY (fileuid)
        REFERENCES public.file (fileuid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.status
    OWNER to postgres;



//-------------------------------------------------------------------------------------------



GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO gallery;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO gallery;



//-------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------



INSERT INTO public.account
(accountuid, email, username, password, displayname, creationdate)
VALUES('12345678-abcd-4896-987c-f30f3678f608'::uuid, 'firstuser@gmail.com', 'firstuser', 'password', 'firstusername', '2024-02-04 12:00:00.000');



insert into file(fileuid, filename, uri, parentuid, accountuid, isdirectory, issymboliclink, creationdate) values 
(gen_random_uuid (), 'Starter file', 'file@nowhere.com', null, '12345678-abcd-4896-987c-f30f3678f608', false, false, (now() at time zone 'utc')),
(gen_random_uuid (), 'Starter directory', 'directory@nowhere.com', null, '12345678-abcd-4896-987c-f30f3678f608', true, false, (now() at time zone 'utc'))
on conflict (filename, parentuid, accountuid) do nothing
returning fileuid;



//-------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------



-- Table: public.file

-- DROP TABLE IF EXISTS public.file;

CREATE TABLE IF NOT EXISTS public.file
(
    fileuid uuid NOT NULL,
    filename character varying COLLATE pg_catalog."default" NOT NULL,
    uri character varying COLLATE pg_catalog."default",
    parentuid uuid,
    accountuid uuid NOT NULL,
	isdirectory boolean,
	issymboliclink boolean,
    CONSTRAINT "File_pkey" PRIMARY KEY (fileuid),
    CONSTRAINT "accountID" FOREIGN KEY (accountuid)
        REFERENCES public.account (accountuid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.file
    OWNER to postgres;


ALTER TABLE public.file ADD CONSTRAINT file_accountuid_filename_parentuid_key 
	UNIQUE NULLS NOT DISTINCT (filename, parentuid, accountuid);



//-------------------------------------------------------------------------------------------



-- Table: public.metadata

-- DROP TABLE IF EXISTS public.metadata;

CREATE TABLE IF NOT EXISTS public.metadata
(
    fileuid uuid NOT NULL,
    userdefinedattr json,
    tags json,
    creationdate timestamp without time zone NOT NULL,
    lasttableaccessdate timestamp without time zone,
    lasttableupdatedate timestamp without time zone,
    lastfileaccessdate timestamp without time zone,
    lastfileupdatedate timestamp without time zone,
    CONSTRAINT "Metadata_pkey" PRIMARY KEY (fileuid),
    CONSTRAINT fileuid FOREIGN KEY (fileuid)
        REFERENCES public.file (fileuid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.metadata
    OWNER to postgres;



//-------------------------------------------------------------------------------------------