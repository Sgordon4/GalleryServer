-- Table: public.account

-- DROP TABLE IF EXISTS public.account;

CREATE TABLE IF NOT EXISTS public.account
(
    accountuid uuid NOT NULL,
    username character varying COLLATE pg_catalog."default" NOT NULL,
    password character varying COLLATE pg_catalog."default" NOT NULL,
    email character varying COLLATE pg_catalog."default" NOT NULL,
    displayname character varying COLLATE pg_catalog."default" NOT NULL,
    creationdate timestamp without time zone NOT NULL,
    CONSTRAINT "Account_pkey" PRIMARY KEY (accountuid)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.account
    OWNER to postgres;










-- Table: public.file

-- DROP TABLE IF EXISTS public.file;

CREATE TABLE IF NOT EXISTS public.file
(
    fileuid uuid NOT NULL,
    accountuid uuid NOT NULL,
    filename character varying COLLATE pg_catalog."default" NOT NULL,
    parentuid uuid,
    uri character varying COLLATE pg_catalog."default",
    filetype character varying COLLATE pg_catalog."default" NOT NULL,
    creationdate timestamp without time zone NOT NULL,
    lastaccessdate timestamp without time zone,
    lastreaddate timestamp without time zone,
    lastupdatedate timestamp without time zone,
    CONSTRAINT "File_pkey" PRIMARY KEY (fileuid),
    CONSTRAINT "accountID" FOREIGN KEY (accountuid)
        REFERENCES public.account (accountuid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.file
    OWNER to postgres;










-- Table: public.metadata

-- DROP TABLE IF EXISTS public.metadata;

CREATE TABLE IF NOT EXISTS public.metadata
(
    fileuid uuid NOT NULL,
    userdefinedattr json,
    tags json,
    lastaccessdate timestamp without time zone,
    lastupdatedate timestamp without time zone,
    CONSTRAINT "Metadata_pkey" PRIMARY KEY (fileuid),
    CONSTRAINT fileuid FOREIGN KEY (fileuid)
        REFERENCES public.file (fileuid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.metadata
    OWNER to postgres;












insert into file(fileuid, accountuid, filename, parentuid, uri, filetype, creationdate, lastaccessdate, lastupdatedate)
values (gen_random_uuid (), '40e6215d-b5c6-4896-987c-f30f3678f608', 'Sample file from Postman', null, null, 'Regular', (now() at time zone 'utc'), null, null)
on conflict (accountuid, filename, parentuid) do nothing
returning fileuid;